// If it's not okay, it's not the end...

#include<bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define pb push_back
#define int long long
#define ldd long double
#define vec_i vector<int>
#define sz(x) (int)(x.size())
#define all(x) (x).begin(),(x).end()
#define forr(x,a,m) for(int x=a;x<m;x+=1)
const int mod = 1000000007;

int dx[4] = {0, 0, 1, -1};
int dy[4] = {1, -1, 0, 0};

void solve() {
    int n, m; cin >> n >> m;
    int a[n][m];
    priority_queue<pair<int, pair<int, int>>>pq;
    forr(i, 0, n) {
        forr(j, 0, m) {
            cin >> a[i][j];
            pq.push({a[i][j], {i, j}});
        }
    }
    int fl = 0, ans = 0;
    while (!fl) {
        fl = 1;
        while (!pq.empty()) {
            while (!(pq.empty()) && pq.top().F != a[pq.top().S.F][pq.top().S.S]) pq.pop();
            vector < pair<int, pair<int, int>>>v;
            forr(k, 0, 4) {
                int x = pq.top().S.F + dx[k];
                int y = pq.top().S.S + dy[k];
                if (x >= 0 && x < n && y >= 0 && y < m) {
                    if (pq.top().F - a[x][y] > 1) {
                        ans += abs(pq.top().F - 1 - a[x][y]);
                        v.pb({a[x][y], {x, y}});
                    }
                }
            }
            int val = pq.top().F;
            if (!pq.empty())
                pq.pop();
            for (auto vbn : v) {a[vbn.S.F][vbn.S.S] = val - 1; pq.push({val - 1, vbn.S});}
            // cout << '\n';
        }
        forr(i, 0, n) {
            forr(j, 0, n) {
                forr(k, 0, 4) {
                    int x = i + dx[k];
                    int y = j + dy[k];
                    if (x >= 0 && x < n && y >= 0 && y < m) {
                        if (abs(a[i][j] - a[x][y]) > 1) {
                            fl = 0;
                            break;
                        }
                    }
                }
                if (fl) break;
            }
            if (fl) break;
        }
    }
    cout << ans << '\n';
}

signed main() {
    ios_base::sync_with_stdio(false); cin.tie(NULL);

    int tin = 1; cin >> tin;
    forr(test_num, 1, tin + 1) {
        cout << "Case #" << test_num << ": ";
        solve();
    }
    return 0;
}
